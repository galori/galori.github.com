<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[You've got a lot of Gal]]></title>
  <link href="http://galori.github.com/atom.xml" rel="self"/>
  <link href="http://galori.github.com/"/>
  <updated>2013-09-02T14:27:52-07:00</updated>
  <id>http://galori.github.com/</id>
  <author>
    <name><![CDATA[Gal Steinitz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Free SSL on Heroku]]></title>
    <link href="http://galori.github.com/blog/2013/09/02/free-ssl-on-heroku/"/>
    <updated>2013-09-02T14:21:00-07:00</updated>
    <id>http://galori.github.com/blog/2013/09/02/free-ssl-on-heroku</id>
    <content type="html"><![CDATA[<p>This is probably old news to most readers, however it was news to me. You can get free SSL on heroku, by using whats known as &#8220;Piggyback SSL&#8221;. For your sensitive pages (Login, Credit Card, etc.) redirect from your regular hostname to</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>https://your-app.herokuapp.com</span></code></pre></td></tr></table></div></figure>


<p>then redirect back to your normal hostname using http://.</p>

<p>Of course, for only $20/mo you can use the SSL add-on and install your own certificate, and use</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>https://your-domain.com</span></code></pre></td></tr></table></div></figure>


<p>&#8230;however for small and personal projects that really don&#8217;t justify any recurring monthly cost, there is this.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ctrl-A to Archive in Outlook for Mac 2011]]></title>
    <link href="http://galori.github.com/blog/2013/08/21/ctrl-a-to-archive-in-outlook-for-mac-2011/"/>
    <updated>2013-08-21T23:50:00-07:00</updated>
    <id>http://galori.github.com/blog/2013/08/21/ctrl-a-to-archive-in-outlook-for-mac-2011</id>
    <content type="html"><![CDATA[<p>Productivity tip: timmorrow.com has a little &#8220;how to&#8221; to create a Ctrl-A to archive shortcut for Outlook for Mac 2011. If you&#8217;re used to the one click &#8220;Archive&#8221; button from Gmail but are stuck using Outlook for work - you&#8217;ll love this.</p>

<p><a href="http://timmorrow.org/archive-feature-on-outlook-for-mac">http://timmorrow.org/archive-feature-on-outlook-for-mac</a></p>

<p>One note: He leaves out the important detail that you need to use the Apple Script Editor to edit and save his script, not just any text editor. Otherwise, its flawless, and will improve your productivity by 250%, studies show.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[One line HTTP server in Ruby or Python]]></title>
    <link href="http://galori.github.com/blog/2013/07/29/one-line-http-server-in-ruby-or-python/"/>
    <updated>2013-07-29T16:53:00-07:00</updated>
    <id>http://galori.github.com/blog/2013/07/29/one-line-http-server-in-ruby-or-python</id>
    <content type="html"><![CDATA[<p>If you need to quickly spin up a web server to just serve static files from your file system, here are two ways to do it:</p>

<h1>Ruby</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ruby</span> <span class="o">-</span><span class="n">rwebrick</span> <span class="o">-</span><span class="n">e</span><span class="s1">&#39;WEBrick::HTTPServer.new(:Port =&gt; 3000, :DocumentRoot =&gt; Dir.pwd).start&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Python</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">python</span> <span class="o">-</span><span class="n">m</span> <span class="n">SimpleHTTPServer</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SVN: Full text search for a specific string in a commit]]></title>
    <link href="http://galori.github.com/blog/2013/07/27/svn-full-text-search-for-a-specific-string-in-a-commit/"/>
    <updated>2013-07-27T21:33:00-07:00</updated>
    <id>http://galori.github.com/blog/2013/07/27/svn-full-text-search-for-a-specific-string-in-a-commit</id>
    <content type="html"><![CDATA[<p>As a long time git user, I expected it to be easy to do a full text search in SVN for a specific string in all commits. Apparently, it is not! However&#8230;fret not git users! Since we&#8217;re all so much more used to using Git, you might as well use the git-svn gateway for the project.</p>

<!--more-->


<p>This will allow you to use all the git commands you&#8217;re used to, while actually pushing to an svn remote. It&#8217;s bidirectional, and you can keep working this way indefinitely - while the rest of your team mates will continue to use SVN and will not be the wiser! Whats more - you now have the advantage of a distributed source control system, while not actually using one. You can commit your code locally to your hearts content and only push it to the remote when you&#8217;re ready.</p>

<p>First, clone the repo into a new folder:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git svn clone http://path/to/your/svn/repo
</span></code></pre></td></tr></table></div></figure>


<p>Next, use the built in git -S option to do a full text search. This will show you every commit where this string was added or removed from any file. The -u option makes it so that the full diff of each commit is displayed, and not just the commit message.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git log -S<span class="s2">&quot;the-string-you-want-to-find&quot;</span> -u
</span></code></pre></td></tr></table></div></figure>


<p>The real answer? Start actually using git! <a href="https://git.wiki.kernel.org/index.php/GitSvnCrashCourse">Git Crash Course for SVN Users</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git tips: Count # of commits between two commits]]></title>
    <link href="http://galori.github.com/blog/2013/07/27/git-tips-count-number-of-commits-between-two-commits/"/>
    <updated>2013-07-27T21:30:00-07:00</updated>
    <id>http://galori.github.com/blog/2013/07/27/git-tips-count-number-of-commits-between-two-commits</id>
    <content type="html"><![CDATA[<p>Get # of commits between 2 commits (a.k.a between to SHA&#8217;s):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git log <span class="o">[</span>first<span class="o">]</span>..<span class="o">[</span>second<span class="o">]</span> --pretty<span class="o">=</span>oneline | wc -l
</span></code></pre></td></tr></table></div></figure>


<p>[first] and [second] can be SHA&#8217;s, branches or tags.</p>

<p>(via <a href="https://twitter.com/GitHints/status/220223510491037696">gitTip Twitter account</a>)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Firebug Lite on an iPad]]></title>
    <link href="http://galori.github.com/blog/2013/07/22/firebug-lite-on-an-ipad/"/>
    <updated>2013-07-22T16:42:00-07:00</updated>
    <id>http://galori.github.com/blog/2013/07/22/firebug-lite-on-an-ipad</id>
    <content type="html"><![CDATA[<p>Firebug Lite works really well on an iPad. If you want a quick way to inspect any web page, here is how you install the Firebug Lite bookmarklet on mobile Safari on an iPad. (Or for that matter, any other mobile device)</p>

<!--more-->


<ol>
<li>Bookmark this page. (Yes, THIS page. Thats the only way to create a new bookmark. Don&#8217;t worry we&#8217;re going to change it in the next step)</li></li>
<li>Copy the bookmarklet javascript code in the text area below:
<textarea style='width: 665px; height: 43px; display: block;'>javascript:(function(){ var fb = document.createElement(&#8216;script&#8217;); fb.type = &#8216;text/javascript&#8217;; fb.src = &#8216;https://getfirebug.com/firebug-lite.js#startOpened&#8217;; document.getElementsByTagName(&#8216;body&#8217;)[0].appendChild(fb); })();</textarea></li>
<li>Go back to your bookmarks, tap the “Edit&#8221; button, and select the bookmark you created in Step 2. Tap the url field for that bookmark to edit it. Tap and hold and select all of the old url. Delete. Tap and hold and paste in the javascript.</li>
</ol>


<p><img src="http://galori.github.com/images/firebug_lite_ipad.png" style="border: none; box-shadow: none;"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why w3schools is bad for the internet]]></title>
    <link href="http://galori.github.com/blog/2013/07/21/why-w3schools-is-bad-for-the-internet/"/>
    <updated>2013-07-21T23:07:00-07:00</updated>
    <id>http://galori.github.com/blog/2013/07/21/why-w3schools-is-bad-for-the-internet</id>
    <content type="html"><![CDATA[<p>This is quite an old topic, but I&#8217;ve never posted about it and do agree strongly with it.</p>

<p>W3Schools.com is not great. It has outdated information. It does not allow the community to submit corrections. It is not affiliated with the W3C but the name makes it seems like it does, and it has not dis-affiliated itself even after repeated requests from the W3C to do so. It provides outdated, misleading or just plain wrong information to new developers.</p>

<!--more-->


<p>Worst of all, it has some great rankings in search engines just by virtue of the fact that it has been around for so long.</p>

<p>There was a concerted grassroots SEO effort by the web development community to dethrone it from its top ranking a few years ago, but it was not successful. See <a href="http://www.youtube.com/watch?v=23Yxji-tEfc">Chris Williams talk from JSConf EU 2010</a>.</p>

<p>However, that doesn&#8217;t mean we can&#8217;t do anything about it!</p>

<p>What you can do:</p>

<ul>
<li>If you search for any reference material, add &#8220;MDN&#8221; to your search query to cause the Mozilla Developer Network pages to bubble to the top. For example, instead of &#8220;block element&#8221;, search for &#8220;block element mdn&#8221;. See the <a href="https://developer.mozilla.org/en-US/">MDN</a></li>
<li>If you see someone else linking to W3Schools, tell them! Send them to w3fools.com</li>
<li>Links to MDN from your web site to help their rankings. (This was the goal of the PromoteJS campaign, its still a great idea).</li>
</ul>


<p>For more info, check out the <a href="https://developer.mozilla.org/en-US/">W3Fools.com</a> site, also dedicated to this topic.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Proceed Anyway button gone from chrome for certificate errors? (Easter Egg)]]></title>
    <link href="http://galori.github.com/blog/2013/07/21/proceed-anyway-button-gone-from-chrome-for-certificate-errors/"/>
    <updated>2013-07-21T16:39:00-07:00</updated>
    <id>http://galori.github.com/blog/2013/07/21/proceed-anyway-button-gone-from-chrome-for-certificate-errors</id>
    <content type="html"><![CDATA[<h1>&#8220;This site&#8217;s security certificate is not trusted&#8221;!</h1>

<p>Apparently Chrome did away with the &#8220;Proceed Anyway&#8221; button, and now it just gives you the option for &#8220;Back to Safety&#8221;. It took a bit of googling but I discovered that if you type the letters for the word &#8220;proceed&#8221;, then it will let you view the site anyway.</p>

<p>As far as I can tell, there is no other way - no advanced preferences or anything similar.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Caught my eye - Links for July 20th]]></title>
    <link href="http://galori.github.com/blog/2013/07/21/caught-my-eye-july-20th/"/>
    <updated>2013-07-21T00:03:00-07:00</updated>
    <id>http://galori.github.com/blog/2013/07/21/caught-my-eye-july-20th</id>
    <content type="html"><![CDATA[<p>HTML 5 crossword puzzle, CSS transitions to go with your Twitter Bootstrap, Faster Heroku Deploys, Execs at Panasonic jailed for 1 year, Nate Silver leaves the NY Times and 2200 sq foot home in Detroit for $1.</p>

<!--more-->


<h1>HTML 5 Crossword Puzzle</h1>

<p>HTML 5 Features you can use now <a href="https://mod.it/8UmnmJ11">crossword puzzle</a><br/>
Reminds me that its time to brush up on <a href="http://caniuse.com/">caniuse.com</a><br/>
(via <a href="http://labnotes.org/">labnotes.org</a>)</p>

<h1>CSS transitions for your Twitter Bootstrap</h1>

<p>CSS Effects for some standard elements like scrollable lists, nav items, etc. Seems like its built to work on top of Twitter Bootstrap although its not explictly mentioned. Its these little things that can change a web site from &#8220;Polished&#8221; to &#8220;Super Polished&#8221;. <br/>
<a href="http://h5bp.github.io/Effeckt.css/dist/">Effeckt.css</a><br/>
(via <a href="http://afreshcup.com/home/2013/7/19/double-shot-1164.html">A Fresh Cup</a>)</p>

<h1>Speed up your Heroku deploys using memcache for assets</h1>

<p>I&#8217;ve noticed my Heroku deploys seem to have slowed down over the last few months. I don&#8217;t think its my apps. Here is a tip from Alex MacCaw explaining how to use memcache to cache the compiled assets that don&#8217;t change from a previous deploy.
<a href="http://blog.alexmaccaw.com/faster-deploys">Faster Heroku Deploys</a>
(via the <a href="http://ruby5.envylabs.com/">Ruby 5 Podcast</a>)</p>

<h1>12 Execs at Panasonic other companies jailed for up to a year for price Fixing</h1>

<p>Pricing for notebook battery cells, among others. Makes me wonder if they were so deep in it, and so focused on being aggressive, successfull business people to the point where they lost sight of the ethics, and were able to pretend they weren&#8217;t doing something wrong. I&#8217;ve definitely seen this type of person up close - the job, the company, ahead of everything and everyone else.<br/>
<a href="http://www.justice.gov/opa/pr/2013/July/13-at-808.html">Panasonic and Its Subsidiary Sanyo Agree to Plead Guilty in Separate Price-Fixing Conspiracies Involving Automotive Parts and Battery Cells</a><br/>
(via <a href="http://yro.slashdot.org/story/13/07/21/0459250/jail-time-for-price-fixing-car-parts">Slashdot</a>)</p>

<h1>Nate Silver to leave NY Times and join ESPN</h1>

<p>He&#8217;s definitely smart and fairly unique, but why haven&#8217;t more people and organizations emulated him?
<a href="http://www.nytimes.com/2013/07/20/business/media/nate-silver-blogger-for-new-york-times-is-to-join-espn-staff.html?_r=0">Nate Silver of FiveThirtyEight Blog Is to Join ESPN Staff</a><br/>
(via <a href="http://daringfireball.net/">daringfireball.net</a>)</p>

<h1>2200 sq foot home in Detroit listed for $1</h1>

<p>Meanwhile every last house fore sale in San Francisco generates a bidding war and goes for above asking.<br/>
<a href="http://www.zillow.com/homedetails/4700-Saint-Clair-St-Detroit-MI-48214/88410305_zpid/">Zillow listing</a><br/>
(<a href="https://twitter.com/fivethirtyeight/status/357991237350985729">via Nate Silver&#8217;s twitter</a>)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remember Firebug Lite?]]></title>
    <link href="http://galori.github.com/blog/2013/07/19/remember-firebug-lite/"/>
    <updated>2013-07-19T14:37:00-07:00</updated>
    <id>http://galori.github.com/blog/2013/07/19/remember-firebug-lite</id>
    <content type="html"><![CDATA[<p><strong>update:</strong> Thanks Joel Moss for linking to this. If you&#8217;re here, also be sure to check out, <a href="http://gal.steinitz.com/blog/2013/07/22/firebug-lite-on-an-ipad/">Firebug Lite on an iPad</a></p>

<center>
<a href="http://gal.steinitz.com/blog/2013/07/22/firebug-lite-on-an-ipad/"><img src="http://galori.github.com/images/firebug_lite_ipad.png" width="300px"></a>
</center>


<p><strong>Interested in contributing to an open source project but don&#8217;t know where to start?</strong></p>

<p>I&#8217;ve recently taken over maintaining the Firebug Lite open source project, after it has been abandoned &amp; dormant for 2 years. I have a great fondness for this little bookmarklet that wont stop giving, it has saved me countless times over the years.</p>

<p>I believe it still has some great potential and uses, especially for mobile devices; and of course its always a life saver for older browsers.</p>

<p>If you are interested in pitching in, you could help with Firebug Lit&#8217;es web page, the build process, the issues list or the codebase itself.</p>

<!-- more -->


<p><em>Firebug Lite&#8217;s web site</em></p>

<ul>
<li>Overhauling the &#8220;Install Firebug Lite&#8221; page, including adding an iPad / mobile installation instructions page for the bookmarklet, but also overall simplifying it the whole page. (Also its got mad Javascript errors right now - probably doesn&#8217;t need 90% of the javascript on that page.)</li>
<li>Migrating all open issues from Google Code to Github (there are some scripts for this). I already migrate the code.</li>
<li>Cleaning up the issues list - are they still relevant, reproduce-able, are they solvable? Perhaps even comment and communicate with the submitter.</li>
<li>Adding Google Analytics event tracking code and server side tracking so we can understand how people are using the bookmarklet.</li>
</ul>


<p><em>Build related</em></p>

<ul>
<li>Some &#8220;forensic analysis&#8221; to reconstruct the build process. I found some remnants of what may have been an ANT script&#8230;but the actual script is nowhere to be found (Just like the guy that used to maintain this project). Mainly involves concatenting and then minifying many javascript files and then pushing them to the web site. (Rake, anyone?)</li>
</ul>


<p><em>Dev Related</em></p>

<ul>
<li>Once we figure out the build process&#8230;I do have a patch ready to go for one of the outstanding bugs - lets do a new point release! The community will rejoice! (Or at least the 1 guy that submitted it)</li>
<li>Attempt to tackle any of the open issues</li>
<li>Make it work sanely on an iphone/android phone</li>
<li>The top voted issue is actually a security limitation; Where the CSS can not be read if it is being served from a different hostname. More and more common these days with CDN&#8217;s, etc. Firebug Lite without the CSS rules is kind of useless! A proposed workaround is the classic cross domain ajax fallback - use a server side proxy. Could work - just needs to be implemented.</li>
<li>This project is based on the regular Firebug plugin extension and its libraries. We should try to bring in some of the newer featuers that make sense.</li>
<li>We would kind-of have free reign to modernize this project to keep it relevant. Another idea I had was to provide an automatic proxy for mobile devices, so you would just visit http://getfirebug.com/lite/www.yoursite.com it would just serve your site with the firebug javascript injected - no clunky installing of bookmarks needed.</li>
</ul>


<p>Anyway, if you&#8217;re interested, reply here, or post to the Firebug Working Group google group, or you can email me at gal (at) steinitz (dot) com.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unsubscribe - ALL THE THINGS]]></title>
    <link href="http://galori.github.com/blog/2013/06/15/unsubscribe-all-the-things/"/>
    <updated>2013-06-15T10:14:00-07:00</updated>
    <id>http://galori.github.com/blog/2013/06/15/unsubscribe-all-the-things</id>
    <content type="html"><![CDATA[<p>How Newsletters and Marketing emails have taken over our inboxes.</p>

<p><a href="http://en.wikipedia.org/wiki/Getting_Things_Done">GTD</a> and <a href="http://inboxzero.com/">Inbox Zero</a> help keep me sane, with the enormous amount of <strong>input</strong> (in GTD parlance) that I receive via email.</p>

<!-- more -->


<p>GTD separates your email (and other inputs) into essentially three <strong>types</strong> of <strong>things</strong>, and provides guidance as to how to <strong>process</strong> them:</p>

<ol>
<li>Actionable: Create an entry in your TO DO list(s)</li>
<li>Reference: Read, or Archive and Read Later</li>
<li>Neither: Throw away</li>
</ol>


<p>The whole point of such a system is that you <em>really</em> want to make sure you don&#8217;t lose track of anything Actionable. However, if you get a large number of emails, just <strong>processing</strong> itself becomes a big time suck. Therefore it would be a shame if too many things that are for reading, get in the way of the primary goal: managing your actions. <strong>What can we do?</strong></p>

<h1>Unsubscribe - ALL THE THINGS.</h1>

<p>We used to be told that you should <strong>never unsubscribe</strong> from spam because all it accomplishes is validating to &#8220;them&#8221; that your email address is real. However - I think we&#8217;ve <strong>won the war</strong> on spam. Evident by the fact that 99% of the truly evil spam already ends up in my Spam folder.</p>

<p>It may not occur to many people, but really, <strong>you can unsubscribe</strong>. And it works! That marketing email from Gap you&#8217;ve been receiving every week for 3 years since you bought that one t-shirt? <strong>Click on unsubscribe</strong>, they&#8217;ll stop sending it to you. That mailing list for your local JCC you got on by providing your email address when signed up for the gym? Click on unsubscribe, <strong>it&#8217;ll stop</strong>.</p>

<p>Now you may be thinking that there are some things in there you really are interested in reading. I argue to you that email is <strong>too action-oriented</strong> to allow <em>any</em> reading materials to arrive to you through it. Think about it&#8230;when you really want to sit down, relax and read something&#8230;do you open your email? No! You open your RSS reader, or pick up your iPad and open FlipBoard, or The Magazine, or look at Twitter.</p>

<p><strong>What then?</strong> If there is something interesting that you can only get through email, bring it to that 2nd place - <strong>the reading place</strong>. One example: <strong>Bring them to your RSS reader</strong>; Create a rule to automatically put them in a folder, and use Gmail&#8217;s <a href="https://developers.google.com/gmail/gmail_inbox_feed">Inbox Feed</a> feature to create an RSS feed out of them.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Absolutely dead simple login system for Rails with omniauth and facebook]]></title>
    <link href="http://galori.github.com/blog/2012/10/24/absolutely-dead-simple-login-system-for-rails-with-omniauth-and-facebook/"/>
    <updated>2012-10-24T23:54:00-07:00</updated>
    <id>http://galori.github.com/blog/2012/10/24/absolutely-dead-simple-login-system-for-rails-with-omniauth-and-facebook</id>
    <content type="html"><![CDATA[<p>In 6 steps&#8230;</p>

<!-- more -->


<p>1) Add omniauth-facebook to your gemfile</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;omniauth-facebook&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>2) Add routes for login and logout</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">match</span> <span class="s1">&#39;/auth/facebook/callback&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;session#create&#39;</span>
</span><span class='line'><span class="n">match</span> <span class="s1">&#39;/auth/logout&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;session#destroy&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>3) Create the sessions controller</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">SessionController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>    <span class="n">session</span><span class="o">[</span><span class="ss">:current_user</span><span class="o">]</span> <span class="o">=</span> <span class="p">{</span><span class="ss">:name</span> <span class="o">=&gt;</span> <span class="n">request</span><span class="o">.</span><span class="n">env</span><span class="o">[</span><span class="s1">&#39;omniauth.auth&#39;</span><span class="o">][</span><span class="ss">:info</span><span class="o">][</span><span class="ss">:name</span><span class="o">]</span><span class="p">}</span>
</span><span class='line'>    <span class="n">redirect_to</span> <span class="n">root_path</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">destroy</span>
</span><span class='line'>    <span class="n">session</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:current_user</span><span class="p">)</span>
</span><span class='line'>    <span class="n">redirect_to</span> <span class="n">root_path</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>4) Add some links to your layout</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">% if </span><span class="n">current_user</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  Logged in as &lt;%=current_user[:name]%&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= link_to &#39;logout&#39;,&#39;/auth/logout&#39; %&gt;</span>
</span><span class='line'><span class="sx">&lt;% else %&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;login with facebook&#39;</span><span class="p">,</span><span class="s1">&#39;/auth/facebook&#39;</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>5) Add a helper to your application controller</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">helper_method</span> <span class="ss">:current_user</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">current_user</span>
</span><span class='line'>    <span class="n">session</span><span class="o">[</span><span class="ss">:current_user</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>6) Add your facebook app keys in config/initializers/omniauth.rb, replacing <code>&lt;api key&gt;</code> and <code>&lt;api secret&gt;</code> with your actual keys:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">middleware</span><span class="o">.</span><span class="n">use</span> <span class="no">OmniAuth</span><span class="o">::</span><span class="no">Builder</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">provider</span> <span class="ss">:facebook</span><span class="p">,</span> <span class="s1">&#39;&lt;api key&gt;&#39;</span><span class="p">,</span> <span class="s1">&#39;&lt;api secret&gt;&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Thats it!</p>

<p>You can replace omniauth-facebook with any other provider (such as omniauth-twitter) and it will work just as well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google strong-arms Acer? - I don't buy it]]></title>
    <link href="http://galori.github.com/blog/2012/09/14/google-strong-arms-acer-i-dont-buy-it/"/>
    <updated>2012-09-14T00:10:00-07:00</updated>
    <id>http://galori.github.com/blog/2012/09/14/google-strong-arms-acer-i-dont-buy-it</id>
    <content type="html"><![CDATA[<p>Google strong-arms Acer</p>

<blockquote><p>Alibaba said that Acer “was notified by Google that if the product runs Aliyun OS,
Google will terminate its Android- related cooperation and other technology
licensing with our partner….We regret Google’s action.”</p>

<p>Stay classy Google.</p></blockquote>

<p>via <a href="http://www.loopinsight.com/2012/09/13/google-strong-arms-acer/">the loop</a>
original article: <a href="http://www.nasdaq.com/article/acer-cancels-press-conference-to-launch-new-smartphone-on-alibaba-software-20120913-00197">Press release from Taipei</a></p>

<!-- more -->


<p>For some reason, I don&#8217;t buy it. Its not only not classy, its predatory, anticompetitive and bordering on unethical, if its true. My gut is telling me that there is more here, perhaps a mis-translation or a mis-representation by someone. This doesn&#8217;t seem to me like something Google would do.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhone 5 - How close was I?]]></title>
    <link href="http://galori.github.com/blog/2012/09/13/iphone-5-how-close-was-i/"/>
    <updated>2012-09-13T21:38:00-07:00</updated>
    <id>http://galori.github.com/blog/2012/09/13/iphone-5-how-close-was-i</id>
    <content type="html"><![CDATA[<p>Follw up to last week&#8217;s post: <a href="http://galori.github.com/blog/2012/09/08/summary-of-apple-rumors-and-predictions-which-i-believe-to-be-true/">Summary of Apple Rumors and Predictions Which I Believe to Be True</a>&#8230;</p>

<p>How close was I?</p>

<!-- more -->


<p><img src="http://galori.github.com/images/posts/iphone_5.jpg" style="float:right; margin-left: 15px"/></p>

<p>I was pretty close, the only thing I got wrong (and frankly surprised me!) was the device size. I thought the physical device will be the same size as the 4S, just with a larger screen. Instead, the iPhone 5 is 4.87&#8221; tall, compared to 4.5&#8221; for the 4S. So roughly 8% taller.</p>

<p>The width is identical - 2.31&#8221;.</p>

<p>The depth, amazingly, is thinner - the new iPhone is 0.30&#8221;, compared to the 4S which was 0.37&#8221;. 18% thinner. It&#8217;s also lighter at 3.95oz, vs 4.9oz..which comes out to 19% lighter.</p>

<p>To quote Tim Cook&#8230;That is truly amazing.</p>

<p><a href="http://www.apple.com/apple-events/september-2012/">Watch the entire Apple Event</a> announcing the iPhone 5 and the slew of other new products and services announced yesterday, including the new Apple Maps, a new iPod Nano, and some pretty impressive stats as to how Apple is doing. Also check out <a href="http://current.com/s/management.htm">my boss</a> Al Gore sitting in the audience in the front row. He&#8217;ll be hard to miss - they pan to him <em>every</em> single time they showed the audience (I guess the camera man was impressed).</p>

<p>Finally&#8230;is Steve Job&#8217;s presence still felt during these presentations? Without a doubt. Even though each apple exec&#8217;s style is his own - Job&#8217;s presentation style is an unspoken presence in every Apple Event.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Summary of Apple rumors and predictions which I believe to be true]]></title>
    <link href="http://galori.github.com/blog/2012/09/08/summary-of-apple-rumors-and-predictions-which-i-believe-to-be-true/"/>
    <updated>2012-09-08T22:05:00-07:00</updated>
    <id>http://galori.github.com/blog/2012/09/08/summary-of-apple-rumors-and-predictions-which-i-believe-to-be-true</id>
    <content type="html"><![CDATA[<p>For all those that don&#8217;t obsessively follow the Apple news and rumor sites, I&#8217;ll summarize it for you. I&#8217;m hoping to keep this list updated.</p>

<!-- more -->


<h2>iPhone</h2>

<ul>
<li>Apple will be announcing the iPhone 5 on September 12th (<a href="http://galori.github.com/images/posts/iphone-5-invite.jpeg">See invitation sent to the press</a>)</li>
<li>It will be available in stores on September 21st (<a href="http://techcrunch.com/2012/08/21/iphone-5-launch-date/">based on Verizon employee&#8217;s blackout schedule</a>)</li>
<li>It will have a new, smaller dock connector (<a href="http://www.reuters.com/article/2012/07/23/us-apple-connector-idUSBRE86M07320120723">source</a>)</li>
<li>The device size will be identical to the iPhone 4, but the screen will be slightly taller, making it a 16x9 aspect ratio</li>
<li>It will support the faster LTE cellphone networks</li>
<li>Apple is following the <a href="http://en.wikipedia.org/wiki/Intel_Tick-Tock">Intel tick/tock</a> release pattern of alternating major version updgrades and then incremental improvements: iPhone 3 / iPhone 3GS, iPhone 4 / iPhone 4s, iPhone 5. Expect an iPhone 5s next year.</li>
</ul>


<h2>iPad</h2>

<ul>
<li>Apple will announce a new, smaller (7&#8221;) iPad in October <a href="http://www.loopinsight.com/2012/08/23/iphone-5-and-ipad-mini-events/">source</a></li>
<li>It will be cheaper than the current iPads.</li>
</ul>


<h2>iOS 6</h2>

<ul>
<li>Developers already have it - public release before the end of the year.</li>
<li>It replaces Google Maps with a new Apple Maps app. (Apple bought several mapping startups over the last few years for this)</li>
<li>It will have Facebook integration</li>
<li>Facetime over the cell network! (AT&amp;T will be limiting this to customers with shared data plans)</li>
<li>New &#8220;Passbook&#8221; app for paperless flight tickets, concert and movie tickets, etc., but <a href="http://www.loopinsight.com/2012/08/28/nfc-on-the-new-iphone/">no NFC</a>.</li>
</ul>


<h2>Mac OSX</h2>

<ul>
<li>Apple will be releasing a new version every year going forward, also following the tick/tock pattern. Major new version every other year, and incremental upgrades in between: Leopard / Snow Leopard, Lion / Mountain Lion. Expect a new cat next year.</li>
</ul>


<h2>Retina Display</h2>

<ul>
<li>I expect <em>all</em> Apple products to eventually have <a href="http://en.wikipedia.org/wiki/Retina_display">retina</a> display - but this may take a few years.</li>
</ul>


<h2>Sources</h2>

<p>If you&#8217;d like to stay up-to-date, here are a few blogs I recommend which do a good job of filtering out the noise and making smart and informed predictions:</p>

<ul>
<li><a href="http://daringfireball.net">John Gruber&#8217;s Daring Fireball</a></li>
<li><a href="http://www.loopinsight.com/">Jim Dalrymple&#8217;s The Loop</a></li>
<li><a href="http://www.marco.org/">Marco Arment&#8217;s marco.org</a></li>
</ul>


<p>Many sites publish Apple rumors, but a lot of them trade accuracy for page views and will publish <a href="http://dealbook.nytimes.com/2010/10/19/flush-with-cash-will-apple-go-shopping/">unconfirmed</a> or sometimes even <a href="http://www.forbes.com/sites/erikkain/2012/04/15/what-apple-ceo-tim-cooks-visit-to-valve-means/">silly rumors</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Global javascript events with Backbone JS]]></title>
    <link href="http://galori.github.com/blog/2012/09/08/global-javascript-events-with-backbone-js/"/>
    <updated>2012-09-08T20:45:00-07:00</updated>
    <id>http://galori.github.com/blog/2012/09/08/global-javascript-events-with-backbone-js</id>
    <content type="html"><![CDATA[<p>In the past I leveraged jQuery&#8217;s events to create a client side message bus in javascript. Triggering and subscribing to global events is a great way to decouple your javascript code and make it more flexible and maintainable. Enter backbone JS, which has even better built in support for events. An easy way to get started is to bolt on event support to your main global app object:</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">_</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">app</span><span class="p">,</span><span class="nx">Backbone</span><span class="p">.</span><span class="nx">Events</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now you can trigger and subscribe to arbitrary events on your app object. For example if the user can select a twitter stream and your page has various components that change accordingly based on the selected stream: When the stream is selected, trigger the event:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s1">&#39;stream-selected&#39;</span><span class="p">,</span><span class="nx">streamName</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Other parts of the code can listen to this event and do something:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;stream-selected&#39;</span><span class="p">,</span><span class="nx">handleStreamSelected</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">handleStreamSelected</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">streamName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// do something</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>I used this pattern extensively for this <a href="http://events.current.com">Social Dashboard</a> project.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[From wordpress to octopress]]></title>
    <link href="http://galori.github.com/blog/2012/09/07/from-wordpress-to-octopress/"/>
    <updated>2012-09-07T23:10:00-07:00</updated>
    <id>http://galori.github.com/blog/2012/09/07/from-wordpress-to-octopress</id>
    <content type="html"><![CDATA[<p>Just moved my blog from wordpress.com to <a href="http://octopress.org/">Octopress</a>. Octopress runs atop <a href="http://jekyllrb.com/">jekyll</a> to generate static files and can deploy to pretty much any hosting provider - but has special tools for hosting on <a href="http://pages.github.com/">github pages</a> - where this blog is now hosted. First I looked at Jekyll on its own, but seems like it required too much manual configuration - whereas Octopress makes all the choices for you. You just need to make changes.</p>

<p>Blog posts are created by editing a text file locally using Textmate 1 in <a href="http://daringfireball.net/projects/markdown/basics">markdown</a>, generating the blog and deploying. The blog&#8217;s filename implies the posting date, for example this posts file name is</p>

<pre><code>sources/_posts/2012-09-07-from-wordpress-to-octopress.markdown
</code></pre>

<p>and you also include what they call a YAML UpfrontMatter to the top of every post to include additional metadata. For example for this post:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="l-Scalar-Plain">layout</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">posta</span>
</span><span class='line'><span class="l-Scalar-Plain">title</span><span class="p-Indicator">:</span> <span class="s">&quot;From</span><span class="nv"> </span><span class="s">wordpress</span><span class="nv"> </span><span class="s">to</span><span class="nv"> </span><span class="s">octopress&quot;</span>
</span><span class='line'><span class="l-Scalar-Plain">date</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">2012-09-07 23:10</span>
</span><span class='line'><span class="l-Scalar-Plain">comments</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'><span class="l-Scalar-Plain">categories</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="nn">---</span>
</span></code></pre></td></tr></table></div></figure>


<p>So far I&#8217;m really happy with it. If you&#8217;d like to give it a whirl yourself, All the info you need is at <a href="http://octopress.org/">Octopress</a>. It&#8217;s got a very vibrant community, which is always a good thing.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript: "Unresponsive script" error]]></title>
    <link href="http://galori.github.com/blog/2012/09/06/javascript-how-to-reproduce-and-fix-an-unresponsive-script-error-in-your-code-osx-solution/"/>
    <updated>2012-09-06T00:00:00-07:00</updated>
    <id>http://galori.github.com/blog/2012/09/06/javascript-how-to-reproduce-and-fix-an-unresponsive-script-error-in-your-code-osx-solution</id>
    <content type="html"><![CDATA[<h2>What it means:</h2>

<p>Javasript code is running for longer than 10 seconds. Thats the limit on Firefox 15. Other browsers may vary, googling reveals Internet Explorer&#8217;s limit is 5 million lines of code (!) and Chrome allows 30 seconds.</p>

<!-- more -->


<h2>How to reproduce:</h2>

<p>Although I was getting this bug report from several people, I was unable to reproduce it, likely due to the fact that my dev machine is pretty beefy. In general, once I can reproduce a bug, fixing it is the easy part. Without reproducing it - you&#8217;re Luke Skywalker, swinging a light saber blindfolded, but the force is not with you&#8230; :-/</p>

<p>To the rescue is this <a href="http://hints.macworld.com/article.php?story=20110131001708255">script</a> from user <em>nissebanan</em> at hints.macworld.com. To use it, follow the instructions on that page. Next, find out the process ID (pid) of your firefox using Terminal:</p>

<figure class='code'><figcaption><span>Find your firefox PID</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ps aux | grep firefox
</span><span class='line'>gal 25829 7.4 3.3 3605600 140336 ?? S 11:57PM 0:55.51 /Applications/Firefox.app/Contents/MacOS/firefox -psn_0_38671583
</span><span class='line'>gal 25954 1.5 0.0 2434892 540 s000 S+ 12:04AM 0:00.01 grep firefox
</span></code></pre></td></tr></table></div></figure>


<p><em>25829</em> is the PID.</p>

<p>Next, run nissebanan&#8217;s script - when it prompts you, provide the PID, and values for sleep and for CPU time. I used 9 seconds of sleep for every 1 second of CPU. This is almost &#8220;unfair&#8221; since 10s of sleep would trigger this error without giving any code a chance to run - so you have to keep it under 10. Once the script is running - you are essentially starving your Firefox of CPU&#8230;you now should be able to reproduce the error.</p>

<h2>Finding the culprit</h2>

<p>There is probably a better way to benchmark your code at this point - but I just went with simple: Start sticking console.log&#8217;s at the beginning and end of each method, and watch the console. When the error pops up - you&#8217;ll see which method was the last one to start and never finished - thats your culprit!</p>

<h2>Fixing it</h2>

<p>If you can optimize your code and have it run faster, do that!</p>

<p>However, a quick (and sometimes the only) fix is to break up the code and have it run asynchronously. Typically - by wrapping a block of code with <code>setTimeout(function{},0)</code>. This will return control to the browser and allow it to &#8220;breath&#8221;, and resets the script timeout counter.</p>

<p>For example, if the offending code loops over 1000 objects and does something to each object, you can defer the loop&#8217;s body asynchronously:</p>

<figure class='code'><figcaption><span>Code that triggers the Unresponsive Script error. ary is 1000 objects:</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">ary</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">obj</span><span class="p">){</span>
</span><span class='line'>  <span class="nx">doSomething</span><span class="p">(</span><span class="nx">obj</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>if the above code takes 10ms per object, you&#8217;ll hit this error. The fix:</p>

<figure class='code'><figcaption><span>Code that doesn&#8217;t trigger the error</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">ary</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">obj</span><span class="p">){</span>
</span><span class='line'>  <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">doSomething</span><span class="p">(</span><span class="nx">obj</span><span class="p">);</span>
</span><span class='line'>  <span class="p">},</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Any caveats?</h1>

<p>One thing to watch out for&#8230;if you have code <em>after</em> the loop, this change would cause it to actually execute before the async code. If thats a problem, you&#8217;ll need a little bit more restructuring. You also may want to check out the <a href="http://mess.genezys.net/jquery/jquery.async.php">jQuery.async</a> which can make some of this easier.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fastest way to pair Apple bluetooth keyboard or trackpad]]></title>
    <link href="http://galori.github.com/blog/2012/08/25/fastest-way-to-pair-apple-bluetooth-keyboard-or-trackpad/"/>
    <updated>2012-08-25T00:00:00-07:00</updated>
    <id>http://galori.github.com/blog/2012/08/25/fastest-way-to-pair-apple-bluetooth-keyboard-or-trackpad</id>
    <content type="html"><![CDATA[<p>If you&#8217;re like me and constantly use the same keyboard+trackpad on 4 different OSX computers..you may appreciate this tip. Fastest way to pair to a new computer (<em>even if its already paired with a different computer)</em>:</p>

<!-- more -->


<ol>
<li>Make sure the device in pairing mode FIRST*</li>
<li>Now go to System Preferences &#8211;> Trackpad &#8211;> Set up bluetooth trackpad</li>
</ol>


<p>You&#8217;ll notice the device is recognized immediately. Don&#8217;t let go of the device pairing button until the big white &#8220;Trackpad Connected&#8221; overlay is shown.</p>

<p>Of course replace #2 with Keyboard if you&#8217;re pairing a keyboard.</p>

<p>*To put the device in pairing mode:</p>

<ol>
<li>Long press on the power button on the side of the device until the device powers down (light goes on, then goes off)</li></li>
<li>2nd long press on the power button, until the device powers up and goes into pairing mode (light goes on, then starts blinking)</li></li>
<li>Don&#8217;t let go of the button until big white &#8220;Trackpad Connected&#8221; (or &#8220;Keyboard Connected&#8221;) overlay shows up.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EJS javascript templates with Backbone JS and Rails 3.2.3]]></title>
    <link href="http://galori.github.com/blog/2012/06/04/ejs-javascript-templates-with-backbone-js-and-rails-3-2-3/"/>
    <updated>2012-06-04T00:00:00-07:00</updated>
    <id>http://galori.github.com/blog/2012/06/04/ejs-javascript-templates-with-backbone-js-and-rails-3-2-3</id>
    <content type="html"><![CDATA[<p>Documentation seems a bit sparse, so here is the low down:</p>

<!-- more -->




<ol>
  <li> add the EJS gem (by Sam Stephenson, of Prototype fame) to your gemfile:

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;ejs&#39;</span>
</span></code></pre></td></tr></table></div></figure>

  <li>Assuming your backbone code is in app/assets/javsacripts/app and all javascript code is included automatically using asset pipleine&#8217;s &#8220;require tree&#8221;, add a template file in app/assets/javascripts/templates. For example for my video chat app, I followed the rails pattern of views/<resource>/<action>. I added app/assets/javascripts/templates/callers/show.jst.ejs:

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&#39;caller&#39;</span> <span class="na">id=</span><span class="s">&#39;caller-&#39;</span> <span class="na">data-stream-id=</span><span class="s">&#39;&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&#39;name&#39;</span><span class="nt">&gt;</span><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&#39;stream-&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&#39;stream--replace&#39;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>

  <li>I did have to force templates to be included before my backbone javascript by explicitly specifying it first in app.js:

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">//=require_tree ./templates</span>
</span><span class='line'><span class="c1">//=require_tree ./app</span>
</span></code></pre></td></tr></table></div></figure>

  <li>(optional) EJS uses ERB syntax of <%= %> by default, but I preferred the  syntax, so I added this into config/initializers/ejs.rb:

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">EJS</span><span class="o">.</span><span class="n">evaluation_pattern</span> <span class="o">=</span> <span class="sr">//</span>
</span><span class='line'><span class="no">EJS</span><span class="o">.</span><span class="n">interpolation_pattern</span> <span class="o">=</span> <span class="sr">//</span>
</span></code></pre></td></tr></table></div></figure>

if you don&#8217;t want to do this, just use <%=variableName%> instead of 

  <li>The EJS gem makes all templates available as clientside functions in window.JST. Add this at the top of your backbone view:

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="nx">app</span><span class="p">.</span><span class="nx">views</span><span class="p">.</span><span class="nx">CallerIndexView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">template</span><span class="o">:</span> <span class="nx">JST</span><span class="p">[</span><span class="s1">&#39;templates/callers/show&#39;</span><span class="p">]</span>
</span><span class='line'>  <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

  <li>Now you can use it in your backbone view:

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">views</span><span class="p">.</span><span class="nx">CallerIndexView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">template</span><span class="o">:</span> <span class="nx">JST</span><span class="p">[</span><span class="s1">&#39;templates/callers/show&#39;</span><span class="p">],</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">html</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">template</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span> <span class="nx">stream</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span> <span class="nx">streamId</span><span class="o">:</span> <span class="nx">stream</span><span class="p">.</span><span class="nx">streamId</span><span class="p">});</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#caller&#39;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">html</span><span class="p">);</span>
</span><span class='line'>  <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<li>If you wanted to just test it out, you could just test it in a browser console like so:

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">template</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">JST</span><span class="p">[</span><span class="s1">&#39;templates/callers/show&#39;</span><span class="p">];</span>
</span><span class='line'><span class="nx">template</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Joe&#39;</span><span class="p">,</span> <span class="nx">streamId</span><span class="o">:</span> <span class="mi">1</span><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

</ol>

]]></content>
  </entry>
  
</feed>
